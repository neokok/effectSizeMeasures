usethis::use_vignette()
usethis::use_vignette("effect_size_examples")
usethis::use_github_actions()
usethis::use_github_actions("check-standard")
usethis::use_github_actions("test-coverage")
usethis::use_readme_rmd()
usethis::use_coverage()
devtools::install_github("neokok/effectSizeMeasures")
library(effectSizeMeasures)
effectSizeMeasures::add(10, 15)
git add -A
devtools::install_github("neokok/effectSizeMeasures")
library(effectSizeMeasures)
effectSizeMeasures::add(10, 15)
devtools::document()
devtools::check()
devtools::install()
effectSizeMeasures::add(20, 12)
usethis::use_mit_license()
devtools::check()
x = c(1, 2, 3, 4, 5)
y = c(10, 9, 8, 7, 6)
mean_x = mean(x)
mean_y = mean(y)
centered_x = x - mean_x
centered_y = y - mean_y
centered_x
centered_y
centered_x * centered_y
sum(centered_x * centered_y)
numerator = sum(centered_x * centered_y)
denominator = sqrt(sum(centered_x ^ 2)) * sqrt(sum(centered_y ^ 2))
denominator
pearson_corr = function(x, y){
if(length(x) != length(y) | length(x) == 0){
warning("Input lengths of x and y must be equal and greater than 0.")
}
mean_x = mean(x)
mean_y = mean(y)
centered_x = x - mean_x
centered_y = y - mean_y
numerator = sum(centered_x * centered_y)
denominator = sqrt(sum(centered_x ^ 2)) * sqrt(sum(centered_y ^ 2))
return(numerator/denominator)
}
pearson_corr(x, y)
corr(x, y)
cor(x, y)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
